buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath 'gradle.plugin.nl.javadude.gradle.plugins:license-gradle-plugin:0.13.1'
        classpath 'com.netflix.nebula:nebula-publishing-plugin:4.9.1'
    }
}

apply plugin: 'nebula.maven-publish'

allprojects {
    repositories {
        mavenCentral()
        jcenter()
        //mavenLocal()
        maven {
            url  "http://dl.bintray.com/kebernet/maven"
        }
    }

    group 'net.kebernet.skillz'
    version '0.1.1'
}

subprojects {

    apply plugin: 'java'
    apply plugin: 'findbugs'
    apply plugin: "jacoco"

    sourceCompatibility = 1.8

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    task installGitHooks(type: Copy) {
        from new File(rootProject.rootDir, '/etc/pre-commit')
        into { new File(rootProject.rootDir, '.git/hooks/') }
    }

    build.dependsOn installGitHooks


    jacocoTestReport {
        reports {
            xml.enabled false
            csv.enabled false
            html.destination "${buildDir}/reports/jacoco"
        }
    }

    check.dependsOn jacocoTestReport
    check.dependsOn javadoc

    test {
        testLogging {
            events "passed", "skipped", "failed", "standardOut", "standardError"
        }
        jacoco {
            append = false
            destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
            classDumpFile = file("$buildDir/jacoco/classpathdumps")
        }
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled false
            html.enabled true
        }
    }

}

