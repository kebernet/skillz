apply plugin: 'java'
apply plugin: "com.github.hierynomus.license"
apply plugin: 'nebula.maven-publish'
apply plugin: 'findbugs'
apply plugin: "jacoco"

sourceCompatibility = 1.8


dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination "${buildDir}/reports/jacoco"
    }
}

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpFile = file("$buildDir/jacoco/classpathdumps")
    }
}


publishing {
    repositories {
        maven {
            credentials {
                username project.hasProperty("kebernet_bintray") == null ? "" : project.getProperties().get("kebernet_bintray")
                password project.hasProperty("kebernet_bintray_api") == null ? "" :  project.getProperties().get("kebernet_bintray_api")
            }
            url "https://api.bintray.com/maven/kebernet/maven/skillz/"
        }
    }
    publications {
        nebula(MavenPublication) {
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            pom.withXml {
                asNode().appendNode('url', 'https://github.com/kebernet/skillz')
                asNode().appendNode('inceptionYear', '2016')
                def lic = asNode().appendNode('licenses')
                        .appendNode('license')
                lic.appendNode('name', 'Apache Software License, Version 2.0')
                lic.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                lic.appendNode('distribution', 'repo')
                def scm = asNode().appendNode('scm')
                scm.appendNode('connection', 'scm:git:git@github.com:kebernet/skillz.git')
                scm.appendNode('url', 'https://github.com/kebernet/skillz')
            }
        }
    }
}

license {
    header rootProject.file('etc/header.txt')
    strictCheck true
    mapping("java", "SLASHSTAR_STYLE")
}

